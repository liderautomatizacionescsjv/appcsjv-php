{"version":3,"sources":["reservas.js"],"names":["loadCarros","sedeSeleccionada","document","getElementById","value","carroSelect","innerHTML","fetch","then","response","json","data","console","log","Array","isArray","length","forEach","carro","div","createElement","className","textContent","nombre","totalpc","dataset","carroId","id","capacidad","onclick","selectCarro","appendChild","error","catch","iniciarCalendario","calendarEl","FullCalendar","Calendar","initialView","nowIndicator","locale","headerToolbar","left","center","right","slotMinTime","slotMaxTime","businessHours","daysOfWeek","startTime","endTime","weekends","allDaySlot","render","abrirModalReserva","style","display","cerrarModalReserva","carroElement","querySelectorAll","item","classList","remove","add","disabled","loadCalendar","window","calendarInstance","destroy","events","eventClick","info","event","abrirModalDetalleReserva","extendedProps","grupo","responsable","fecha","horaInicio","start","toLocaleTimeString","hour","minute","horaFin","end","cantidadComputadores","nombre_carro","eventColor","selectedCarro","querySelector","alert","limpiarFormularioReserva","reset","reserva","innerText","cerrarModalDetalleReserva","verificarDisponibilidad","disponibilidadMensaje","boton","warn","disponibles","computadoresDisponibles","max","reservarBtn","mostrarNotificacion","mensaje","contenedor","notificacion","setTimeout","opacity","transform","async","cargarMisReservas","respuesta","reservas","tabla","fila","eliminarReserva","confirm","formData","FormData","append","method","body","resultado","addEventListener","fechaReserva","today","Date","setDate","getDate","minDate","toISOString","split","setAttribute","inicio","hora","minutos","map","Number","nuevaHora","nuevaHoraFin","toString","padStart","preventDefault","headers","Content-Type","JSON","stringify","result","status","message"],"mappings":"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","file":"reservas.min.js","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\n    cargarMisReservas();\n\n    if (document.getElementById(\"calendar\")) {\n        iniciarCalendario();\n    }\n\n    if (document.getElementById(\"sede\")) {\n        document.getElementById(\"sede\").addEventListener(\"change\", loadCarros);\n    }\n\n\n    // Asegurar que los elementos existen antes de asignar eventos\n    const fechaReserva = document.getElementById(\"fechaReserva\");\n    const horaInicio = document.getElementById(\"horaInicio\");\n    const horaFin = document.getElementById(\"horaFin\");\n    \n\n    if (fechaReserva) {\n        // Obtener la fecha de mañana en formato YYYY-MM-DD\n        const today = new Date();\n        today.setDate(today.getDate() + 1); // Sumamos 1 día para evitar hoy\n        const minDate = today.toISOString().split(\"T\")[0];\n\n        // Establecer el valor mínimo en el input\n        fechaReserva.setAttribute(\"min\", minDate);\n    }\n\n\n    if (horaInicio && horaFin) {\n\n        horaInicio.setAttribute(\"min\", \"07:00\");\n        horaInicio.setAttribute(\"max\", \"15:00\");\n        horaFin.setAttribute(\"min\", \"08:00\");\n        horaFin.setAttribute(\"max\", \"16:00\");\n\n        // Evento al cambiar la hora de inicio\n        horaInicio.addEventListener(\"change\", function () {\n            const inicio = horaInicio.value;\n            if (!inicio) return;\n\n            // Convertir a objeto Date para manipular la hora\n            let [hora, minutos] = inicio.split(\":\").map(Number);\n\n            if (hora < 7) {\n                mostrarNotificacion(\"⚠️ La hora mínima de reserva es 7:00 AM\");\n                horaInicio.value = \"07:00\";\n                hora = 7;\n            }\n\n            let nuevaHora = hora + 1; // Sumar 1 hora\n           \n            // Ajustar si sobrepasa las 23:59\n            if (nuevaHora > 16) nuevaHora = 16;\n\n            // Formatear a HH:MM\n            const nuevaHoraFin = nuevaHora.toString().padStart(2, \"0\") + \":\" + minutos.toString().padStart(2, \"0\");\n\n            // Asignar la nueva hora fin automáticamente\n            horaFin.value = nuevaHoraFin;\n            horaFin.setAttribute(\"min\", nuevaHoraFin);\n        });\n\n        // Validar que la hora de fin no sea menor a la de inicio\n        \n        \n        horaFin.addEventListener(\"change\", function () {\n            if (horaInicio.value && horaFin.value) {\n                if (horaFin.value <= horaInicio.value) {\n                    mostrarNotificacion(\"⚠️ La hora de fin debe ser posterior a la hora de inicio.\");\n                    horaFin.value = \"\"; // Limpiar el campo si la hora es inválida\n                }\n\n                if (horaFin.value > \"16:00\") {\n                    mostrarNotificacion(\"⚠️ La hora máxima de reserva es hasta las 4:00 PM.\");\n                    horaFin.value = \"16:00\"; // Ajustar la hora fin al máximo permitido\n                }\n            }\n        });\n    }\n\n    if (fechaReserva && horaInicio && horaFin) {\n        fechaReserva.addEventListener(\"change\", verificarDisponibilidad);\n        horaInicio.addEventListener(\"change\", verificarDisponibilidad);\n        horaFin.addEventListener(\"change\", verificarDisponibilidad);\n        console.log(\"Eventos de disponibilidad registrados correctamente\");\n    } else {\n        console.error(\"Uno o más elementos de fecha y hora no se encontraron en el DOM.\");\n    }\n});\n\n\nfunction loadCarros() {\n    const sedeSeleccionada = document.getElementById(\"sede\").value;\n    const carroSelect = document.getElementById(\"carroSelect\");\n\n    carroSelect.innerHTML = \"\"; // Limpiar antes de agregar nuevos datos\n\n    if (!sedeSeleccionada) return;\n\n    fetch(`http://localhost:3002/api/carros?sede=${sedeSeleccionada}`)  // Cambiar a `/reservas/carros?sede=Medellín` si usas ReservaController\n        .then(response => response.json())\n        .then(data => {\n            console.log(\"Datos recibidos de la API:\", data);\n            if (!Array.isArray(data)) {\n                console.error(\"Error: La API no devolvió un array:\", data);\n                return;\n            }\n            if (data.length === 0) {\n                carroSelect.innerHTML = \"<p>No hay carros disponibles en esta sede.</p>\";\n                return;\n            }\n\n            data.forEach(carro => {\n                const div = document.createElement(\"div\");\n                div.className = \"carro-item\";\n                div.textContent = `${carro.nombre} (${carro.totalpc} Computadores)`;\n                div.dataset.carroId = carro.id;\n                div.dataset.capacidad = carro.totalpc;\n                div.onclick = () => selectCarro(div);\n\n                carroSelect.appendChild(div);\n            });\n        })\n        .catch(error => console.error(\"Error al cargar carros:\", error));\n}\n\n\n\n\n// Iniciar el calendario con FullCalendar\nfunction iniciarCalendario() {\n    var calendarEl = document.getElementById('calendar');\n    const calendar = new FullCalendar.Calendar(calendarEl, {\n        initialView: 'timeGridWeek',\n        nowIndicator: true,\n        locale: 'es',\n        headerToolbar: {\n            left: 'prev,next today',\n            center: 'title',\n            right: 'timeGridWeek,timeGridDay'\n        },\n        slotMinTime: '07:00:00',\n        slotMaxTime: '17:00:00',\n        businessHours: {\n            daysOfWeek: [1, 2, 3, 4, 5], // Lunes a Viernes\n            startTime: '07:00',\n            endTime: '17:00',\n        },\n        weekends: false,\n        allDaySlot: false,\n    });\n\n    calendar.render();\n}\n\n// Función para abrir el modal de reserva\nfunction abrirModalReserva() {\n    document.getElementById(\"modalReserva\").style.display = \"block\";\n}\n\n// Función para cerrar el modal de reserva\nfunction cerrarModalReserva() {\n    document.getElementById(\"modalReserva\").style.display = \"none\";\n}\n\n\nfunction selectCarro(carroElement) {\n    // Deseleccionar cualquier carro previamente seleccionado\n    document.querySelectorAll('.carro-item').forEach(item => item.classList.remove('selected'));\n\n    // Seleccionar el carro actual\n    carroElement.classList.add('selected');\n\n    // Guardar el ID del carro seleccionado\n    const carroId = carroElement.dataset.carroId;\n\n    // Habilitar el botón de reservar\n    document.getElementById('abrirModalReservaBtn').disabled = false;\n\n    // Cargar el calendario con las reservas de este carro\n    loadCalendar(carroId);\n}\n\n\nfunction loadCalendar(carroId) {\n    fetch(`http://localhost:3002/api/reservas?carro_id=${carroId}`)\n        .then(response => response.json())\n        .then(data => {\n            console.log(\"Reservas recibidas para el calendario:\", data);\n\n            if (!Array.isArray(data)) {\n                console.error(\"Error: La API no devolvió un array:\", data);\n                return;\n            }\n\n            const calendarEl = document.getElementById('calendar');\n\n            // Si ya existe un calendario, primero lo destruye\n            if (window.calendarInstance) {\n                window.calendarInstance.destroy();\n            }\n\n            window.calendarInstance = new FullCalendar.Calendar(calendarEl, {\n                initialView: 'timeGridWeek',\n                nowIndicator: true,\n                locale: 'es',\n                headerToolbar: {\n                    left: 'prev,next today',\n                    center: 'title',\n                    right: 'timeGridWeek,timeGridDay'\n                },\n                slotMinTime: '07:00:00',\n                slotMaxTime: '17:00:00',\n                businessHours: {\n                    daysOfWeek: [1, 2, 3, 4, 5], // Lunes a Viernes\n                    startTime: '07:00',\n                    endTime: '17:00',\n                },\n                weekends: false,\n                allDaySlot: false,\n                events: data,  // 📌 Se pasa la información desde la API\n\n                eventClick: function(info) {\n                    const event = info.event;\n                    abrirModalDetalleReserva({\n                        carro: event.extendedProps.carro,\n                        grupo: event.extendedProps.grupo,\n                        responsable: event.extendedProps.responsable,\n                        fecha: event.extendedProps.fecha,  // 📌 Se obtiene la fecha del evento\n                        horaInicio: event.start.toLocaleTimeString('es-CO', { hour: '2-digit', minute: '2-digit' }),\n                        horaFin: event.end.toLocaleTimeString('es-CO', { hour: '2-digit', minute: '2-digit' }),\n                        cantidadComputadores: event.extendedProps.cantidadComputadores,\n                        nombre_carro: event.extendedProps.nombre_carro\n                    });\n                },\n\n                eventColor: '#ffa81d'\n            });\n\n            window.calendarInstance.render();\n        })\n        .catch(error => console.error(\"Error al cargar reservas en el calendario:\", error));\n}\n\n\n\n\n\n\nfunction abrirModalReserva() {\n    const selectedCarro = document.querySelector('.carro-item.selected');\n    if (!selectedCarro) {\n        alert('Debes seleccionar un carro antes de reservar.');\n        return;\n    }\n\n    // Guardar el carro en el formulario de reserva\n    document.getElementById('formReserva').dataset.carroId = selectedCarro.dataset.carroId;\n\n    document.getElementById(\"modalReserva\").style.display = \"block\";\n}\n\n\nfunction limpiarFormularioReserva() {\n    document.getElementById('formReserva').reset();\n\n    // Restablecer los valores específicos manualmente si es necesario\n    document.getElementById('fechaReserva').value = \"\";\n    document.getElementById('horaInicio').value = \"\";\n    document.getElementById('horaFin').value = \"\";\n    document.getElementById('cantidadComputadores').value = \"\";\n    document.getElementById('grupo').value = \"\";\n    document.getElementById('disponibilidad').textContent = \"\"; // Limpiar mensaje de disponibilidad\n\n    console.log(\"Formulario de reserva reiniciado.\");\n}\n\n\nfunction abrirModalDetalleReserva(reserva) {\n    console.log(\"Reserva seleccionada:\", reserva); // 🛠️ Depuración\n    document.getElementById('detalleCarro').innerText = reserva.nombre_carro;\n    document.getElementById('detalleGrupo').innerText = reserva.grupo;\n    document.getElementById('detalleResponsable').innerText = reserva.responsable;\n    document.getElementById('detalleHoraInicio').innerText = reserva.horaInicio;\n    document.getElementById('detalleHoraFin').innerText = reserva.horaFin;\n    document.getElementById('detalleCantidadComputadores').innerText = reserva.cantidadComputadores;\n    document.getElementById('modalDetalleReserva').style.display = 'block';\n}\n\nfunction cerrarModalDetalleReserva() {\n    document.getElementById('modalDetalleReserva').style.display = 'none';\n}\n\n\nfunction verificarDisponibilidad() {\n    const carroElement = document.querySelector('.carro-item.selected');\n    const carroId = carroElement ? carroElement.dataset.carroId : null;\n    const fecha = document.getElementById('fechaReserva').value;\n    const horaInicio = document.getElementById('horaInicio').value;\n    const horaFin = document.getElementById('horaFin').value;\n    const disponibilidadMensaje = document.getElementById('disponibilidad');\n    const boton = document.getElementById('btn-reservam')\n\n    console.log(\"Ejecutando verificarDisponibilidad\");\n    console.log(\"Carro ID:\", carroId);\n    console.log(\"Fecha:\", fecha);\n    console.log(\"Hora Inicio:\", horaInicio);\n    console.log(\"Hora Fin:\", horaFin);\n\n    if (!carroId || !fecha || !horaInicio || !horaFin) {\n        console.warn(\"Algunos valores son nulos o no han sido seleccionados.\");\n        boton.disabled = true;\n        disponibilidadMensaje.textContent = \"Seleccione una fecha y hora válida.\";\n        return;\n    }\n\n    fetch(`http://localhost:3002/api/disponibilidad?carro_id=${carroId}&fecha=${fecha}&horaInicio=${horaInicio}&horaFin=${horaFin}`)\n        .then(response => response.json())\n        .then(data => {\n            console.log(\"Respuesta de API:\", data);\n\n            if (data.error) {\n                disponibilidadMensaje.textContent = data.error;\n                return;\n            }\n\n            const disponibles = data.computadoresDisponibles;\n            console.log(disponibles)\n            if (disponibles > 0) {\n                disponibilidadMensaje.textContent = `Computadores disponibles: ${disponibles}`;\n                document.getElementById('cantidadComputadores').max = disponibles;\n                boton.disabled = false;\n            } else {\n                disponibilidadMensaje.textContent = \"Este carrito no está disponible en este horario\";\n                boton.disabled = true;\n            }\n        })\n        .catch(error => {\n            console.error(\"Error al verificar disponibilidad:\", error);\n            reservarBtn.disabled = true;\n        });\n}\n\n\n\n// NOTIFICACION\n\nfunction mostrarNotificacion(mensaje) {\n    const contenedor = document.getElementById(\"notificacion-container\");\n\n    // Crear la notificación\n    const notificacion = document.createElement(\"div\");\n    notificacion.classList.add(\"notificacion\");\n\n    // Agregar contenido con ícono y texto\n    notificacion.innerHTML = `<i>✅</i> ${mensaje}`;\n\n\n    // Agregar la notificación al contenedor\n    contenedor.appendChild(notificacion);\n\n    // Mostrar con animación\n    setTimeout(() => {\n        notificacion.style.opacity = \"1\";\n        notificacion.style.transform = \"translateY(0)\";\n    }, 100);\n\n    // Eliminar la notificación después de 4 segundos con animación\n    setTimeout(() => {\n        notificacion.style.opacity = \"0\";\n        notificacion.style.transform = \"translateY(-20px)\";\n        setTimeout(() => {\n            notificacion.remove();\n        }, 300);\n    }, 4000);\n}\n\n\n\n\n// ----------------- RESERVAR ----------------\n\n\ndocument.getElementById('formReserva').addEventListener('submit', function(event) {\n    event.preventDefault(); // Evita que recargue la página\n\n    const selectedCarro = document.querySelector('.carro-item.selected');\n    if (!selectedCarro) {\n        alert('Debes seleccionar un carro antes de reservar.');\n        return;\n    }\n\n    const data = {\n        carro: selectedCarro.dataset.carroId,\n        fecha: document.getElementById('fechaReserva').value,\n        horaInicio: document.getElementById('horaInicio').value,\n        horaFin: document.getElementById('horaFin').value,\n        cantidadComputadores: document.getElementById('cantidadComputadores').value,\n        grupo: document.getElementById('grupo').value\n    };\n\n    console.log(data);\n\n    fetch('http://localhost:3002/api/reservas/crear', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n    })\n    .then(response => response.json())\n    .then(result => {\n        if (result.status === 'success') {\n            mostrarNotificacion(\"Reserva realizada con éxito ✅\"); // Mostrar notificación\n            limpiarFormularioReserva(); // Limpiar formulario\n            cerrarModalReserva();\n            loadCalendar(selectedCarro.dataset.carroId); // Recargar el calendario con las nuevas reservas\n        } else {\n            alert('Error al reservar: ' + result.message);\n            mostrarNotificacion(\"Error al realizar la reserva ❌\");\n        }\n    })\n    .catch(error => console.error(\"Error al realizar la reserva:\", error));\n});\n\nasync function cargarMisReservas() {\n    try {\n        const respuesta = await fetch(\"/api/mis-reservas\");\n        const reservas = await respuesta.json();\n\n        const tabla = document.getElementById(\"tabla-reservas\");\n        tabla.innerHTML = \"\"; // Limpiar tabla antes de agregar nuevas filas\n\n        if (reservas.error) {\n            tabla.innerHTML = `<tr><td colspan=\"7\">${reservas.error}</td></tr>`;\n            return;\n        }\n\n        reservas.forEach(reserva => {\n            const fila = document.createElement(\"tr\");\n\n            fila.innerHTML = `\n                <td>${reserva.nombre_carro}</td>\n                <td>${reserva.grupo}</td>\n                <td>${reserva.fecha}</td>\n                <td>${reserva.horaInicio}</td>\n                <td>${reserva.horaFin}</td>\n                <td>${reserva.cantidadComputadores}</td>\n                <td>\n                    <button class=\"btn-eliminar\" onclick=\"eliminarReserva(${reserva.id})\">Eliminar</button>\n                </td>\n            `;\n\n            tabla.appendChild(fila);\n        });\n    } catch (error) {\n        console.error(\"Error cargando reservas:\", error);\n    }\n}\n\nasync function eliminarReserva(id) {\n    if (!confirm(\"¿Estás seguro de eliminar esta reserva?\")) return;\n\n    try {\n        const formData = new FormData();\n        formData.append(\"id\", id);\n\n        const respuesta = await fetch(\"/api/eliminar-reserva\", {\n            method: \"POST\",\n            body: formData\n        });\n\n        const resultado = await respuesta.json();\n\n        if (resultado.resultado) {\n            alert(\"Reserva eliminada correctamente\");\n            cargarMisReservas(); // Recargar la tabla\n        } else {\n            alert(\"Error al eliminar la reserva\");\n        }\n    } catch (error) {\n        console.error(\"Error al eliminar reserva:\", error);\n    }\n}\n\n\n"]}